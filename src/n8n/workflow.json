{
  "name": "Chatbot Response Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/webhook/sendMessage",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-node",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$node['Webhook'].json['headers']['authorization']}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "auth-check",
      "name": "Check Authentication",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "https://your-hasura-endpoint.hasura.app/v1/graphql",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "={{$node['Webhook'].json['headers']['authorization']}}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "query ValidateChat($chatId: uuid!) { chats_by_pk(id: $chatId) { id user_id } }"
            },
            {
              "name": "variables", 
              "value": "={\"chatId\": \"{{$node['Webhook'].json['body']['input']['chatId']}}\"}"
            }
          ]
        },
        "options": {}
      },
      "id": "validate-chat",
      "name": "Validate Chat Ownership",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [680, 200]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$node['Validate Chat Ownership'].json['data']['chats_by_pk']}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "chat-exists-check",
      "name": "Chat Exists Check",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [900, 200]
    },
    {
      "parameters": {
        "url": "https://openrouter.ai/api/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer YOUR_OPENROUTER_API_KEY"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "openai/gpt-3.5-turbo"
            },
            {
              "name": "messages",
              "value": "=[{\"role\": \"user\", \"content\": \"{{$node['Webhook'].json['body']['input']['message']}}\"}]"
            },
            {
              "name": "max_tokens",
              "value": "500"
            }
          ]
        },
        "options": {}
      },
      "id": "openrouter-call",
      "name": "Call OpenRouter API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1120, 100]
    },
    {
      "parameters": {
        "url": "https://your-hasura-endpoint.hasura.app/v1/graphql",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "={{$node['Webhook'].json['headers']['authorization']}}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "mutation SaveResponse($chatId: uuid!, $content: String!) { insert_messages_one(object: {chat_id: $chatId, content: $content, role: \"assistant\"}) { id } }"
            },
            {
              "name": "variables",
              "value": "={\"chatId\": \"{{$node['Webhook'].json['body']['input']['chatId']}}\", \"content\": \"{{$node['Call OpenRouter API'].json['choices'][0]['message']['content']}}\"}"
            }
          ]
        },
        "options": {}
      },
      "id": "save-response",
      "name": "Save Response to Database",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1340, 100]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\"success\": true, \"message\": \"Response generated successfully\", \"response\": \"{{$node['Call OpenRouter API'].json['choices'][0]['message']['content']}}\"}"
      },
      "id": "success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1560, 100]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\"success\": false, \"message\": \"Unauthorized or invalid chat ID\"}"
      },
      "id": "error-response",
      "name": "Error Response", 
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 400]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Check Authentication",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Authentication": {
      "main": [
        [
          {
            "node": "Validate Chat Ownership",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Chat Ownership": {
      "main": [
        [
          {
            "node": "Chat Exists Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Exists Check": {
      "main": [
        [
          {
            "node": "Call OpenRouter API",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call OpenRouter API": {
      "main": [
        [
          {
            "node": "Save Response to Database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Response to Database": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}